feature Cast the datatype of a column.

  before
    import "db";
    .qutils.hdbRoot:"/tmp/hdb_castColumn";
    Table:([] c1:`boolean$(); c2:`long$());
    (hsym `$.qutils.hdbRoot,"/2022.01.01/Table/") set Table;
    (hsym `$.qutils.hdbRoot,"/2022.01.02/Table/") set Table;
    system "l ",.qutils.hdbRoot;

  after
    system "rm -rf ",.qutils.hdbRoot;

  should cast a column of an in-memory table to a new type.
    expect the column to be casted to a new type specified by type name.
      `InMemoryTable set ([] c1:1 2);
      .db.castColumn[`InMemoryTable;`c1;`float];
      .qu.compare[.Q.ty InMemoryTable`c1; "f"]
    expect the column to be casted to a new type specified by type character.
      `InMemoryTable set ([] c1:1 2);
      .db.castColumn[`InMemoryTable;`c1;"f"];
      .qu.compare[.Q.ty InMemoryTable`c1; "f"]

  should cast a column of a partitioned table to a new type.
    expect the column to be casted to a new type specified by type name.
      .db.castColumn[`Table;`c1;`int];
      system "l .";
      columnPath:.Q.dd[.Q.par[`:.; 2022.01.01; `Table]; `c1];
      .qu.compare[.Q.ty get columnPath; "i"]
    expect the column to be casted to a new type specified by type name.
      .db.castColumn[`Table;`c2;"f"];
      system "l .";
      columnPath:.Q.dd[.Q.par[`:.; 2022.01.01; `Table]; `c2];
      .qu.compare[.Q.ty get columnPath; "f"]
