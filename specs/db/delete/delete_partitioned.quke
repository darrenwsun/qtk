feature Delete rows of a segmented table given certain criteria.

  before each
    import "db";
    import "tbl";
    .qutils.hdbRoot:"/tmp/hdb_delete_partitioned";
    system "cd ",.qutils.hdbRoot;
    (hsym `$.qutils.hdbRoot,"/2022.01.01/PartitionedTable/") set .Q.en[`:.;] ([] c1:1 2 3; c2:`a`b`c);
    (hsym `$.qutils.hdbRoot,"/2022.01.02/PartitionedTable/") set .Q.en[`:.;] ([] c1:1 2 3; c2:`a`b`c);
    system "l ",.qutils.hdbRoot;

  after each
    system "rm -rf ",.qutils.hdbRoot;

  should delete all rows if the criteria is empty.
    expect all rows deleted.
      .qtk.db.delete[`PartitionedTable; ()];
      .qu.compare[select c1, c2 from PartitionedTable; .Q.en[`:.;] ([] c1:`long$(); c2:`$())]

  should delete some rows if they match the criteria, for the case that partition key is not used in the criteria.
    expect some rows deleted.
      .qtk.db.delete[`PartitionedTable; enlist (>;`c1;2)];
      .qu.compare[select c1, c2 from PartitionedTable; .Q.en[`:.;] ([] c1:1 2 1 2; c2:`a`b`a`b)]

  should delete some rows if they match the criteria, for the case that partition key is used in first criterion.
    expect some rows deleted.
      .qtk.db.delete[`PartitionedTable; ((=;`date;2022.01.01); (>;`c1;2))];
      .qu.compare[select c1, c2 from PartitionedTable; .Q.en[`:.;] ([] c1:1 2 1 2 3; c2:`a`b`a`b`c)]

  should delete no row if none match the criteria.
    expect no row deleted.
      .qtk.db.delete[`PartitionedTable; enlist (>;`c1;5)];
      .qu.compare[select c1, c2 from PartitionedTable; .Q.en[`:.;] ([] c1:1 2 3 1 2 3; c2:`a`b`c`a`b`c)]
