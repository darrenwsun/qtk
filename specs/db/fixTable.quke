feature Fix table based on a good partition.

  before
    import "db";
    .qutils.hdbRoot:"/tmp/hdb_fixTable";
    Table:([] c1:10b; c2:1 2);
    (hsym `$.qutils.hdbRoot,"/2022.01.01/Table/") set Table;
    (hsym `$.qutils.hdbRoot,"/2022.01.02/Table/") set Table;
    (hsym `$.qutils.hdbRoot,"/2022.01.03/Table/") set Table;
    (hsym `$.qutils.hdbRoot,"/2022.01.04/Table/") set Table;
    system "l ",.qutils.hdbRoot;
    `InMemoryTable set ([] c1:1 2);

  after
    system "rm -rf ",.qutils.hdbRoot;

  should fix a table based on a good partition.
    expect .d file to be added if it's missing.
      .os.remove .qutils.hdbRoot,"/2022.01.02/Table/.d";
      .db.fixTable[`Table; 2022.01.01];
      system "l .";
      .qu.compare[select c1, c2 from Table where date=2022.01.02; ([] c1:10b; c2:1 2)]

    expect missing columns to be added.
      @[hsym `$.qutils.hdbRoot,"/2022.01.03/Table"; `.d; :; enlist `c1];
      .db.fixTable[`Table; 2022.01.01];
      system "l .";
      .qu.compare[select c1, c2 from Table where date=2022.01.03; ([] c1:10b; c2:0N)]

    expect out-of-order columns to be reordered.
      @[hsym `$.qutils.hdbRoot,"/2022.01.04/Table"; `.d; :; reverse get hsym `$.qutils.hdbRoot,"/2022.01.04/Table/.d"];
      .db.fixTable[`Table; 2022.01.01];
      system "l .";
      .qu.compare[cols select from Table where date=2022.01.04; `date`c1`c2]

  should raise error "TableTypeError: not a partitioned table [*]" if the table is not a partitioned table.
    expect error "TableTypeError: not a partitioned table [*]" if the table is not a partitioned table.
      .qu.compare[
        @[.db.fixTable[`InMemoryTable; ]; 2022.01.01; {x}];
        "TableTypeError: not a partitioned table [InMemoryTable]"]
