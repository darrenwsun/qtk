feature Row count of a table per partition.

  before
    .qtk.import.loadModule["db";`qtk];
    .qtk.import.loadModule["tbl";`qtk];
    .qutils.hdbRoot:"/tmp/hdb";
    Table:([] c1:`boolean$(); c2:`long$());
    (hsym `$.qutils.hdbRoot,"/2022.01.01/Table/") set Table;
    (hsym `$.qutils.hdbRoot,"/2022.01.02/Table/") set Table;
    system "l ",.qutils.hdbRoot;

  after
    system "rm -rf ",.qutils.hdbRoot;

  should return a dictionary from partitions to row count of the table in each partition.
    expect a dictionary from partitions to row count of the table in each partition.
      .qu.compare[.qtk.db.rowCountPerPartition[`Table]; 2022.01.01 2022.01.02!0 0]

  should raise error "TableTypeError: not a partitioned table [*]" if the table is not a partitioned table.
    expect error "TableTypeError: not a partitioned table [*]"
      Table2:([] c1:`boolean$());
      .qu.compare[
        @[.qtk.db.rowCountPerPartition; `Table2; {x}];
        "TableTypeError: not a partitioned table [Table2]"
       ]
