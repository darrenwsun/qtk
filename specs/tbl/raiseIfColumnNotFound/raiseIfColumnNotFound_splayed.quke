feature Check if a column exists in a splayed table.

  before each
    .qtk.import.loadModule["tbl";`qtk];
    .qutils.hdbRoot:"/tmp/hdb_raiseIfColumnNotFound_splayed";
    .qutils.tabRef:hsym `$.qutils.hdbRoot,"/SplayedTable/";
    .qtk.tbl.create[.qutils.tabRef; ([] c1:1 2)];
    system "l ",.qutils.hdbRoot;

  after each
    .qtk.tbl.drop .qutils.tabRef;
    .qtk.os.rmtree .qutils.hdbRoot;

  should raise "ColumnNotFoundError" if a column is not found.
    expect error "ColumnNotFoundError: c2".
      .qu.compare[
        .[.qtk.tbl.raiseIfColumnNotFound; (SplayedTable;`c2); {x}];
        "ColumnNotFoundError: c2"
      ]
    expect error "ColumnNotFoundError: c2" when the table is passed by name.
      .qu.compare[
        .[.qtk.tbl.raiseIfColumnNotFound; (`SplayedTable;`c2); {x}];
        "ColumnNotFoundError: c2 on SplayedTable"
      ]
    expect error "ColumnNotFoundError: c2" when the table is passed by partitioned table ID.
      .qu.compare[
        .[.qtk.tbl.raiseIfColumnNotFound; (.qutils.tabRef;`c2); {x}];
        "ColumnNotFoundError: c2 on ",string .qutils.tabRef
      ]

  should not raise "ColumnNotFoundError" if a column is found.
    expect no error.
      .qu.compare[
        .qtk.tbl.raiseIfColumnNotFound[SplayedTable;`c1];
        (::)
      ]
    expect no error when the table is passed by name.
      .qu.compare[
        .qtk.tbl.raiseIfColumnNotFound[`SplayedTable;`c1];
        (::)
      ]
