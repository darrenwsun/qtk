feature Update values in certain columns of a segmented table.

  before each
    .qtk.import.loadModule["tbl";`qtk];
    .qutils.hdbRoot:"/tmp/hdb_update_segmented";
    .qutils.segment1:"/tmp/hdb_update_segment1";
    .qutils.segment2:"/tmp/hdb_update_segment2";
    .Q.dd[hsym `$.qutils.hdbRoot; `par.txt] 0: (.qutils.segment1; .qutils.segment2);
    .qutils.tabRef:(hsym `$.qutils.hdbRoot; `date; `SegmentedTable);
    .qtk.tbl.create[.qutils.tabRef; ([] date:2022.01.01 2022.01.01 2022.01.02 2022.01.02; c1:`a`a`b`b; c2:1 2 3 4)];
    system "l ",.qutils.hdbRoot;

  after each
    .qtk.tbl.drop `SegmentedTable;
    .qtk.os.rmtree each (.qutils.hdbRoot; .qutils.segment1; .qutils.segment2);

  should be able to change data type of a column.
    expect data type of the column is updated.
      .qtk.tbl.update[`SegmentedTable; (); 0b; (enlist`c2)!(enlist enlist`a)];
      .qu.compare[select c2 from SegmentedTable; .Q.en[`:.;] ([] c2:4#`a)]

  should be able to change data type of a column, when the table is specified by partitioned table ID.
    expect data type of the column is updated.
      .qtk.tbl.update[(`:.; `date; `SegmentedTable); (); 0b; (enlist`c2)!(enlist enlist`a)];
      .qu.compare[select c2 from SegmentedTable; .Q.en[`:.;] ([] c2:4#`a)]

  should be able to change certain indices of a column.
    expect certain indices of the column is updated.
      .qtk.tbl.update[`SegmentedTable; enlist (>;`c2;3); 0b; (enlist`c2)!(enlist (*;`c2;2))];
      .qu.compare[select c2 from SegmentedTable; ([] c2:1 2 3 8)]

  should be able to change certain indices of a column, when partitioned field is used in the first criterion.
    expect certain indices of the column is updated.
      .qtk.tbl.update[`SegmentedTable; ((=;`date;2022.01.01); (>;`c2;1)); 0b; (enlist`c2)!(enlist (*;`c2;2))];
      .qu.compare[select c2 from SegmentedTable; ([] c2:1 4 3 4)]

  should be able to change a column by grouping.
    expect certain indices of the column is updated.
      .qtk.tbl.update[`SegmentedTable; (); (enlist`c1)!(enlist`c1); (enlist`c2)!(enlist (max;`c2))];
      .qu.compare[select c2 from SegmentedTable; ([] c2:2 2 4 4)]

  should raise error "TypeError" if it's a partial update and the new values don't have the same type as other values.
    expect error "TypeError: mix type s with j on column c1"
      .qu.compare[
        .[.qtk.tbl.update; (`SegmentedTable; enlist (>;`c2;3); 0b; (enlist`c2)!(enlist enlist `a)); {x}];
        "TypeError: mix type s with j on column c2"
      ]
