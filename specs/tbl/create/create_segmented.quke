feature Create a new segmented table with given data.

  before each
    .qtk.import.loadModule["tbl";`qtk];
    .qutils.hdbRoot:"/tmp/hdb_create_segmented";
    .qutils.segment1:"/tmp/hdb_create_segment1";
    .qutils.segment2:"/tmp/hdb_create_segment2";
    .qutils.tabRef:(hsym `$.qutils.hdbRoot; `date; `SegmentedTable);
    .Q.dd[hsym `$.qutils.hdbRoot; `par.txt] 0: (.qutils.segment1; .qutils.segment2);

  after each
    .qtk.tbl.drop .qutils.tabRef;
    .qtk.os.rmtree .qutils.hdbRoot;

  should create a new segmented table with non-empty data
    expect a new segmented table created with non-empty data
      .qu.result:.qtk.tbl.create[.qutils.tabRef; ([] date:2022.01.01 2022.01.02; c1:("aa";"bb"); c2:`a`b)];
      system "l ",.qutils.hdbRoot;
      .qu.compare[select from SegmentedTable; .Q.en[`:.] ([] date:2022.01.01 2022.01.02; c1:("aa";"bb"); c2:`a`b)]
    expect the table name is returned
      .qu.compare[.qu.result; .qutils.tabRef]
